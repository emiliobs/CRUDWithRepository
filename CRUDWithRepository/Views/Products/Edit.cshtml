@using CRUDWithRepository.Models
@model Product

@{
    ViewData["Title"] = "Edit Product";
}

<div class="container mt-5">
    <h2>@ViewData["Title"]</h2>
    <hr />
    <div class="shodow p-3 mb-5 bg-white rounded">
        <form asp-action="Edit" method="post">

            <div class="flex-row">
                <label asp-for="Id" class="col-form-label-lg"></label>
                <input asp-for="Id"  class="form-control" readonly />                
            </div>

            <div class="flex-row">
                <label asp-for="ProductName" class="col-form-label-lg"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>

            <div class="flex-row">
                <label asp-for="Price" class="col-form-label-lg"></label>
                <input asp-for="Price" class="form-control" type="number" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="flex-row">
                <label asp-for="Quantity" class="col-form-label-lg"></label>
                <input asp-for="Quantity" class="form-control" type="number" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="flex-row mt-2">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}